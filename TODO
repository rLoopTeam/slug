*Numerical stabilization

   The compressible Reynolds equation can have elliptic or
   hyperbolic characteristics, depending on the situation.
   Small gaps, with lots of sliding velocity
   seem to make the simulation blow up.  Moose has support
   for Discontinuous Galerkin, DG. That's good for the hyperbolic
   situation, but for when the situation is more elliptic, the
   DG implementation will need stabilization via the Interior
   Penalty Method.

   When the characteristic is elliptic, ei when the sliding
   velocity is zero, and there are shocks present, there
   are numerical oscillations, though the solve will converge.

*Time kernels

  Only steady state is supported currently.  Implement time
  derivative kernel for Compressible Reynolds Eqn.

*Air distribution

  The air distribution system could play an important role in
  the both the static and dynamic performance of you air bearing
  design.  Be it long slender holes from a plenum to the film,
  or hoses coming from air control solenoids on an active film
  stability control system.  A first step here is to create
  kernels for 1D compressible flow.

  Make gui and Moose Actions for specification of air distribution
  system to minimize input file insanity.

*Suspension modeling

  Implement scalar kernels to model the mass and moment of
  inertia of the pod as well as the masses, springs, and a
  dampers of the suspension system.

  Make GUI and Moose Actions ... because this could get messy
  in the input file.

*Dynamic stiffness and damping coefficient extraction

  Two possible ways:
  - Formulate compressible Reynolds Eqn as an eigen problem.
  - Brute force, time domain

*Make compressible reynolds pressure kernels so that it takes a vector
 instead of a scalar for the sliding velocity input.  v must be renamed
 to v_surface so that a single Global input file variable works.
